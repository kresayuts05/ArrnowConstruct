@using ArrnowConstruct.Extensions
@model PostViewModel

@{
    ViewBag.Title = "Post Details";
    bool first = true;
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="container" style="display:inline">
    <div class="row">
        <div class="col-4">
            <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">

                    @foreach (var image in Model.Images)
                    {
                        <div class="carousel-item @(first ? "active" : string.Empty) ">
                            <img class="d-block w-100" style="height:500px" src="@image" alt="image">
                        </div>

                        first = false;
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>

            </div>
        </div>
        <div class="card col-8 border-0">
            <p style="font-size:25px;"><u>@Model.Title</u></p>
            <p>Located in: <b>@Model.Site.Client.User.Address</b></p>
            <p>
                Total Price:
                <b>@String.Format("{0:f2}", Model.Site.Price) BGN</b>
            </p>
            <p>Started on date: <b>@Model.Site.FromDate</b></p>
            <p>Finished on date: <b>@Model.Site.ToDate</b></p>
            <p>Description: <b>@Model.Description</b></p>
            <p>Rooms Count: <b>@(Model.Site.RoomsCount)</b></p>
            <p>Room Categories: <b>@(string.Join(", ", Model.Site.RoomsTypes))</b> </p>
            <p>Area: <b>@(Model.Site.Area)</b></p>
            <p>CreatedOn: <b>@(Model.CreatedOn)</b></p>
            <p></p>
            <div class="card absolute" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">Client Info</h5>
                    <hr></hr>
                    <p class="card-text">Email:  @Model.Site.Client.User.Email</p>
                    <p class="card-text">Phone Number: @Model.Site.Client.User.Phone</p>
                    <p class="card-text">Full Name: @Model.Site.Client.User.FirstName @Model.Site.Client.User.LastName</p>
                </div>
            </div>
            <p></p>

            <div class="form-inline">
                @if (this.User.Identity.IsAuthenticated)
                {
                    @if (Model.Site.Constructor.User.Id == User.Id())
                    {
                        <a class="btn btn-purple" asp-controller="Post" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                        <a class="ml-2 btn btn-danger" asp-controller="Post" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
                    }
                    else
                    {
                        <a class="btn btn-warning" asp-controller="Post" asp-action="Like" asp-route-id="@Model.Id">Like</a>
                        <a class="btn btn-warning" asp-controller="Post" asp-action="Comment" asp-route-id="@Model.Id">Comment</a>
                    }
                }
            </div>
        </div>
    </div>
</div>